{"ast":null,"code":"var _jsxFileName = \"/Users/gvkoundinya/Desktop/Projects/sorting-visualizer/src/View/Components/SortVisualizer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from './Button';\nimport Sorter from './Sorter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SortVisualizer = props => {\n  _s();\n  const getNumberArray = length => {\n    const a = [];\n    const arrayLength = length !== null && length !== void 0 ? length : 50;\n    for (let i = 0; i < arrayLength; i = i + 1) {\n      a.push(Math.floor(Math.random() * 100));\n    }\n    return a;\n  };\n  const [state, setState] = useState({});\n  const handleButtonClick = (e, buttonClicked) => {\n    e.preventDefault();\n    if (buttonClicked === 'SORT') {\n      console.log(\"Sort is Working\");\n      const newArray = state.sortArray;\n      let temp = newArray[0];\n      newArray[0] = newArray[1];\n      newArray[1] = temp;\n      setState(prevState => ({\n        ...prevState,\n        sortArray: newArray\n      }));\n    } else if (buttonClicked === 'RESET') {\n      var _state$sortCount;\n      const sortCount = (_state$sortCount = state.sortCount) !== null && _state$sortCount !== void 0 ? _state$sortCount : 25;\n      setState(prevState => ({\n        ...prevState,\n        sortCount: sortCount\n      }));\n    }\n    ;\n  };\n\n  /*const bubbleSort = (array: number[]) => {\n    const arr = array;\n    for(let i = 0;i<arr.length; i++){\n      for(let j=i+1; j< arr.length;j++){\n        if (arr[i] > arr[j]){\n          let temp = arr[i];\n          arr[i] = arr[j];\n          arr[j] = temp;\n        }\n      }\n    }\n    return arr;\n  }*/\n\n  const handleArrayLengthChange = e => {\n    e.preventDefault();\n    const {\n      value\n    } = e.target;\n    setState({\n      sortCount: Math.min(value, 100),\n      sortArray: getNumberArray(Math.min(value, 100))\n    });\n  };\n  const sortArray = getNumberArray(state.sortCount);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-column-3 w-3/5 bg-sorter min-h-1/2 border-2 border-white rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row m-4 justify-evenly\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col justify-start align-baseline\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"count\",\n            children: \"Array Length\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"count\",\n            className: \"my-2 border-2 border-black rounded-md w-24 h-10\",\n            type: 'number',\n            min: 10,\n            max: 100,\n            onBlur: e => handleArrayLengthChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            buttonLabel: \"Sort\",\n            emphasis: \"PRIMARY\",\n            size: \"sm\",\n            onClick: e => handleButtonClick(e, \"SORT\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            buttonLabel: \"Reset\",\n            emphasis: \"PRIMARY\",\n            size: \"sm\",\n            onClick: e => handleButtonClick(e, 'RESET')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-1/2 w-11/12 justify-self-center\",\n        children: /*#__PURE__*/_jsxDEV(Sorter, {\n          array: sortArray,\n          type: \"bubble\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"justify-self-end\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: 'md',\n          emphasis: 'PRIMARY',\n          buttonLabel: \"Code Snippet</>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(SortVisualizer, \"wc4FVGFDk/CrMM/4WhalkcDyeN4=\");\n_c = SortVisualizer;\nexport default SortVisualizer;\nvar _c;\n$RefreshReg$(_c, \"SortVisualizer\");","map":{"version":3,"names":["React","useState","Button","Sorter","jsxDEV","_jsxDEV","Fragment","_Fragment","SortVisualizer","props","_s","getNumberArray","length","a","arrayLength","i","push","Math","floor","random","state","setState","handleButtonClick","e","buttonClicked","preventDefault","console","log","newArray","sortArray","temp","prevState","_state$sortCount","sortCount","handleArrayLengthChange","value","target","min","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","type","max","onBlur","buttonLabel","emphasis","size","onClick","array","_c","$RefreshReg$"],"sources":["/Users/gvkoundinya/Desktop/Projects/sorting-visualizer/src/View/Components/SortVisualizer.tsx"],"sourcesContent":["import React, {useState} from 'react'\nimport Button from './Button'\nimport Sorter from './Sorter'\n\n\nexport interface ISortVisualizerProps{\n  sortName: string;\n}\n\nexport interface ISortVisualizerState{\n  sortCount: number;\n  sortArray: number[];\n}\n\n\n\n\nconst SortVisualizer =(props: ISortVisualizerProps) => {\n\nconst getNumberArray = (length?: number) =>{\n  const a: number[] = [];\n  const arrayLength = length ?? 50;\n  for(let i=0; i<arrayLength;i = i+1){\n    a.push(Math.floor(Math.random() * (100)));\n  }\n  return a;\n}\n\n  const [state, setState] = useState<ISortVisualizerState>({});\n\n  const handleButtonClick = (e: any, buttonClicked: string) => {\n    e.preventDefault();\n    if (buttonClicked === 'SORT'){\n      console.log(\"Sort is Working\");\n      const newArray = state.sortArray;\n      let temp = newArray[0];\n      newArray[0] = newArray[1];\n      newArray[1] = temp;\n      setState(prevState => ({...prevState, sortArray: newArray}));\n    }\n    else if (buttonClicked === 'RESET'){\n      const sortCount = state.sortCount ?? 25;\n      setState(prevState => ({...prevState, sortCount: sortCount}));\n    };\n  }\n\n  /*const bubbleSort = (array: number[]) => {\n    const arr = array;\n    for(let i = 0;i<arr.length; i++){\n      for(let j=i+1; j< arr.length;j++){\n        if (arr[i] > arr[j]){\n          let temp = arr[i];\n          arr[i] = arr[j];\n          arr[j] = temp;\n        }\n      }\n    }\n    return arr;\n  }*/\n\n\n  const handleArrayLengthChange = (e: any) => {\n    e.preventDefault();\n    const {value} = e.target;\n    setState({sortCount: Math.min(value,100) , sortArray: getNumberArray(Math.min(value,100))});\n}\n\n\n  const sortArray: number[] = getNumberArray(state.sortCount);\n  return (\n    <>\n    <div className='grid-column-3 w-3/5 bg-sorter min-h-1/2 border-2 border-white rounded-lg'>\n      <div className='flex flex-row m-4 justify-evenly'>\n          <div className='flex flex-col justify-start align-baseline'>\n          <label htmlFor=\"count\">Array Length</label>\n            <input name='count'   className=\"my-2 border-2 border-black rounded-md w-24 h-10\" type={'number'} min={10} max={100} onBlur={(e) => handleArrayLengthChange(e)}/>\n          </div>\n          <div>\n            <Button  buttonLabel='Sort' emphasis='PRIMARY' size='sm' onClick={(e: any) => handleButtonClick(e, \"SORT\")}/>\n          </div>\n          <div>\n            <Button  buttonLabel='Reset' emphasis='PRIMARY' size='sm' onClick={(e: any) => handleButtonClick(e, 'RESET')}/>\n          </div>\n      </div>\n      <div className='h-1/2 w-11/12 justify-self-center'>\n        <Sorter array={sortArray} type='bubble' />\n      </div>\n      <div className='justify-self-end'>\n          <Button size = {'md'} emphasis={'PRIMARY'} buttonLabel={\"Code Snippet</>\"}  />\n      </div>\n    </div>\n    </>\n  )\n}\n\nexport default SortVisualizer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}